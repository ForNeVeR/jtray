module me.fornever.jtray.Config where

import frege.java.Util (Properties)

data Config = Config { jenkinsUrl :: String,
                       jenkinsAuth :: Bool,
                       jenkinsLogin :: Maybe String,
                       jenkinsApiKey :: Maybe String }

readConfig :: InputStream -> IO Config
readConfig stream = do
    properties <- loadProperties stream
    -- config <- fromProperties properties
    -- return config
    return $ Config "" false Nothing Nothing -- TODO: Real config.

loadProperties :: InputStream -> IOMutable Properties
loadProperties stream = do
    properties <- newProperties
    -- properties.load stream
    return properties

newProperties :: STMutable s Properties
newProperties = Properties.new ()

--fromProperties :: STMutable s Properties -> ST s Config
--fromProperties properties = do
--    jenkinsAuth <- get "jenkins.auth"
--    jenkinsUrl <- get "jenkins.url"
--    jenkinsLogin <- get "jenkins.login"
--    jenkinsApiKey <- get "jenkins.api_key"
--    let auth = jenkinsAuth == "true"
--    return $ Config { jenkinsUrl = jenkinsUrl,
--                      jenkinsAuth = jenkinsAuth,
--                      jenkinsLogin = if auth then Just jenkinsLogin else Nothing,
--                      jenkinsApiKey = if auth then Just jenkinsApiKey else Nothing }
--  where get :: String -> ST s String
--        get key = properties.getProperty key ""
