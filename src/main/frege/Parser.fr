module me.fornever.jtray.Parser where

import me.fornever.jtray.Data (CCProject)

data ParserConfigurationException = pure native javax.xml.parsers.ParserConfigurationException
derive Exceptional ParserConfigurationException

data SAXException = pure native org.xml.sax.SAXException
derive Exceptional SAXException

data Document = pure native org.w3c.dom.Document

data DocumentBuilder = pure native javax.xml.parsers.DocumentBuilder where
    native parse :: DocumentBuilder -> InputStream -> IO Document
        throws SAXException, IOException

data DocumentBuilderFactory = pure native javax.xml.parsers.DocumentBuilderFactory where
    native new javax.xml.parsers.DocumentBuilderFactory.newInstance :: () -> ST s DocumentBuilderFactory
    native newDocumentBuilder :: DocumentBuilderFactory -> ST s DocumentBuilder
        throws ParserConfigurationException

readStream :: InputStream -> IO [CCProject]
readStream stream = do
    factory <- DocumentBuilderFactory.new ()
    builder <- factory.newDocumentBuilder
    document <- builder.parse stream
    return [] -- TODO: Really parse the stream
